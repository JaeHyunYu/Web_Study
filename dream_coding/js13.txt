async , await
	-> promise를 간편하게! // 깔끔하게 promise를 사용하는것 // 그렇다고 promise를 무조건 async, await를 써야한다는거가 아니라 때에 따라 promise를 쓰는 거가 나을때가 있고 async, await쓰는 거가 깔끔할 때가 있음!

async

function getData(){
	// 10초가 지나면 값을 리턴한다고 가정!
	return 'hi';
}

const a = getData();
console.log(a);

	=> 이렇게 되면 자바스크립트는 getData()함수로 가서10초를 지낸 뒤 그 아래 콘솔로그로 지나가게 됨! // 비동기적인 것을 설정해주지 않음!

async는 함수앞에 키워드를 넣으면 resolve, reject를 쓰지 않더라도 저절로 프로미스꼴이 되어짐!

await // 기다렸다가 리턴해주는!

병렬적 처리및 여러가지 확인을 하려면 youtube한번 더 chk!

promise.all ==> promise들을 배열적으로 넘겨주게 되면 병렬적으로 처리해서 가져와줌!

promise.race ==> promise들을 배열로 넘겨주면, 먼저 실행되는 promise만 출력해줌!