variable ( 메모리에 읽고 쓰기가 가능함 )
const는 읽기만 가능 -> const를 선언하고 할당해버리면 read(읽기)만가능해짐

js에선 값이 바뀔일이 없으면 const가더 적합함

메모리에 저장되는 타입

primitive -> 값자체가 메모리에 저장되는 것
object -> object는 너무커서 메모리에 한번에 저장되지 않음 -> ref(참고사항)가 저장되서 이를 통해 실제로 object가 담겨있는 메모리를 가르키는 곳을 통해 접근해서 보게되는 것!

immutable data type(데이터값을 절대 변경 못하는 것) -> 
	premitive type -> 데이터 자체를 변경하는 것이 불가능/ 값자체에 메모리에 저장되는 것이기 떄문에 전체 지우고 다시 저장하는 것은 가능하지만 데이터 값중 한개만 교체하고 이런거가 안된다는 의미임)
	frozen object도 변경 불가능

mutable data type(바꿀 수 있는 데이터 타입)
	-> 모든 object들은 변경할 수 있음!

===operator===

문자열에 문자열을 + 로해서 문자열을 합칠 수도 있음

연산자들은 알고있던 내용 그대로... 추가로 더 배우고싶다 그러면 그때그때 구글링을 하면 될듯

check()라는 함수는 시간을 좀 쓰다가 최종적으로 마지막에 true리턴하는 함수임

or연산자는 조건들 보다가 true인 조건있으면 뒤에 조건 확인안하고 바로 true리턴함 => 연산이 많은 애들을 따라서 뒤쪾에 위치하게해서 최대한 빠르게 코드가 실행되도록 코드를 짜야한다! 이것이 효율적인 것!

&&(and)연산자도 마찬가지임! 얘는 false 나오는 순간 맛탱이 가니까 and도 무거운걸 뒤쪾으로 보내는 거가 효율적임!

== != --> loose equality // 값만 같으면 ㄱㅊ
=== !== --> strict equality // 값도 같고, type도 같아야함
